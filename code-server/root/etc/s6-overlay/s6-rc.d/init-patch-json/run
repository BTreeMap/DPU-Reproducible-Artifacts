#!/usr/bin/with-contenv bash

# Helper to determine truthy values
is_true() {
  local value="${1,,}"
  [[ "$value" =~ ^(true|yes|1|on|y)$ ]]
}

# Set defaults if not defined
: "${PATCH_JSON_USE_FORCE:=true}"
: "${PATCH_JSON_ENABLE_SORT_KEYS:=true}"

patch_and_echo() {
  local source_file="$1"
  shift
  local patch_files=("$@")
  
  # Construct optional flags
  local flags=""
  if is_true "$PATCH_JSON_USE_FORCE"; then
    flags+=" --force"
  fi
  if ! is_true "$PATCH_JSON_ENABLE_SORT_KEYS"; then
    flags+=" --no-sort-keys"
  fi

  echo "Patching '$source_file' with patches: ${patch_files[*]} and flags: $flags"
  /opt/shared-venv/bin/python /opt/code-server-scripts/patch_json.py --source "$source_file" $flags --in-place "${patch_files[@]}"
}

# Check if PATCH_JSON is set to a value representing "true"
if [[ -n "$PATCH_JSON" && "${PATCH_JSON,,}" =~ ^(true|yes|1|on|y)$ ]]; then
  patch_and_echo /config/data/Machine/settings.json /usr/share/code-server-scripts/patch_json/*.json
  patch_and_echo /config/data/User/settings.json /usr/share/code-server-scripts/patch_json/*.json
  echo "Patching completed."
else
  echo "PATCH_JSON is not set to true. Skipping patching."
fi
